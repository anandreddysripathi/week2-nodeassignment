						CallBack Hell
						-------------
->A callback hell is nothing but a implementation of nested callback functions i.e another callback function is   called within a callback function and so on.
->This is also called as pyramid of Doom .
 
 example:
function one() {
  setTimeout(function() {
    console.log('1');
    setTimeout(function() {
      console.log('2');
       //throw new Error;
      setTimeout(function() {
        console.log('3');
        setTimeout(function() {
          console.log('4');
        }, 2000);
      }, 200);
    }, 2000);
  }, 2000);
};
one();


->output will be:
  1
  2
  3
  4

					Problems with callback hell:
					----------------------------
 ->in the event loop, the stack will overflow in the event loop as as nested callbacks were present.
 ->readability complexity increases.
 ->if any unexpected thing occurs at anypoint in between , then the next functions will not be executed,this        may break the regular flow of program .
 
